<?php


namespace App;

/**
 * Class Calculator
 * @package App
 */
class Calculator extends ApiFaker
{
    const MRP = 2778;

    const VEHICLE_REGIONS_COEFFICIENTS = [
        'Алматинская область'               =>  1.78,
        'Южно-Казахстанская область'        =>  1.01,
        'Восточно-Казахстанская область'    =>  1.96,
        'Костанайская область'              =>  1.95,
        'Карагандинская область'            =>  1.39,
        'Северо-Казахстанская область'      =>  1.33,
        'Акмолинская область'               =>  1.32,
        'Павлодарская область'              =>  1.63,
        'Жамбылская область'                =>  1.00,
        'Актюбинская область'               =>  1.35,
        'Западно-Казахстанская область'     =>  1.17,
        'Кызылординская область'            =>  1.09,
        'Атырауская область'                =>  2,69,
        'Мангистауская область'             =>  1.15,
        'г. Алматы'                            =>  2.96,
        'г. Астана'                            =>  2.2
    ];

    const VEHICLE_TYPES_COEFFICIENTS = [
        'Легковые' =>                2.09,
        'Грузовые' =>                3.98,
        'Троллейбусы, трамваи'=>     2.33,
    ];

    /**
     * @var
     */
    private $iin;

    /**
     * @var
     */
    private $vehicleNumber;

    /**
     * @var
     */
    private $experinceType;

    /**
     * Calculator constructor.
     * @param string $iin
     * @param string $vehicleNumber
     * @param string $experienceType
     */
    public function __construct(string $iin, string $vehicleNumber, string $experienceType)
    {
        $this->iin = $iin;
        $this->vehicleNumber = $vehicleNumber;
        $this->experinceType = $experienceType;
    }

    /**
     * @return int
     */

    const BONUS_MALUS = array(
        "M"   => 2.45,
        0   => 2.30,
        1   => 1.55,
        2   => 1.40,
        3   => 1.00,
        4   => 0.95,
        5   => 0.90,
        6   => 0.85,
        7   => 0.80,
        8   => 0.75,
        9   => 0.70,
        10  => 0.65,
        11  => 0.60,
        12  => 0.55,
        13  => 0.50
    );

    /**
     * @return mixed
     */

    private function getClient(string $iin)
    {
        $dataClient = parent::getClientData($iin);
        $bonusMalus = self::BONUS_MALUS[$dataClient['bonus_malus']];
        $yearOld = $dataClient['years_old'];
        $ageAndExperience = 1;

        if ($yearOld < 25 && getExperience($this->experinceType) < 2) {
            $ageAndExperience = 1.10;
        }
        if ($yearOld < 25 && getExperience($this->experinceType) > 2) {
            $ageAndExperience = 1.05;
        }
        if ($yearOld > 25 && getExperience($this->experinceType) < 2) {
            $ageAndExperience = 1.05;
        }
        if ($yearOld > 25 && getExperience($this->experinceType) > 2) {
            $ageAndExperience = 1.00;
        }

        return $bonusMalus * $ageAndExperience;
    }

    private function getVehicle(string $vehicleNumber)
    {
        $currentYear = date('Y');
        $vehicleData = parent::getVehicleData($vehicleNumber);
        $typeCoef = self::VEHICLE_TYPES_COEFFICIENTS[$vehicleData['type']];
        $regionCoef = self::VEHICLE_REGIONS_COEFFICIENTS[$vehicleData['region']];
        $year = $vehicleData['year'];
        $yearCoef = 1;
        if ($currentYear - $year > 7) {
            $yearCoef = 1.10;
        }
        else {
            $yearCoef = 1;
        }

        return $typeCoef * $regionCoef * $yearCoef; // TODO: Change the autogenerated stub
    }

    public function getPolicyPrice() : int
    {
        return (self::MRP * 1.9) * $this->getClient() * $this->getVehicle() ;
    }

    public function getExperience($e): int
    {
        return 1;
    }
}
